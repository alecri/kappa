) %>%
gather(curve, vpc, Quadratic:`Quadratic meta-regression`)
ggplot(coffee_vpc, aes(dose, vpc, group = curve)) +
geom_point(aes(shape = curve)) +
geom_smooth(aes(linetype = curve), method = "loess", se = F, col = "black") +
labs(y = "VPC", x = "Coffee consumption (cups/day)", shape = "Curve", linetype = "Curve") +
theme(legend.position = "top")
coffee_vpc <- coffee %>%
filter(se != 0) %>%
mutate(
`Quadratic` = vpc(onestage),
`Quadratic meta-regression` = vpc(quadr_reg)
) %>%
gather(curve, vpc, Quadratic:`Quadratic meta-regression`)
p_coffee_vpc <- ggplot(coffee_vpc, aes(dose, vpc, group = curve)) +
geom_point(aes(shape = curve)) +
geom_smooth(aes(col = curve), method = "loess", se = F, col = "black") +
labs(y = "VPC", x = "Coffee consumption (cups/day)", shape = "Curve", col = "Curve") +
scale_color_manual(values = c(`Quadratic` = "blue", `Quadratic meta-regression` = "red")) +
theme(legend.position = "top")
p_coffee_vpc
coffee_vpc
p_coffee_vpc <- ggplot(coffee_vpc, aes(dose, vpc, group = curve)) +
geom_point(aes(shape = curve)) +
geom_smooth(aes(col = curve), method = "loess", se = F) +
labs(y = "VPC", x = "Coffee consumption (cups/day)", shape = "Curve", col = "Curve") +
scale_color_manual(values = c(`Quadratic` = "blue", `Quadratic meta-regression` = "red")) +
theme(legend.position = "top")
p_coffee_vpc
p_coffee_vpc <- ggplot(coffee_vpc, aes(dose, vpc, group = curve)) +
geom_point(aes(shape = curve, col = curve)) +
geom_smooth(aes(col = curve), method = "loess", se = F) +
labs(y = "VPC", x = "Coffee consumption (cups/day)", shape = "Curve", col = "Curve") +
scale_color_manual(values = c(`Quadratic` = "blue", `Quadratic meta-regression` = "red")) +
theme(legend.position = "top")
p_coffee_vpc
bi
lapply(AIC_pi_red, round, 2) %>%
do.call("cbind", .) %>%
`rownames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
rbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "p") %>%
kable("latex", align = "c", booktabs = T, escape = F,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
kable_styling(font_size = 8)
library(dosresmeta)
library(tidyverse)
library(gridExtra)
library(rms)
library(metafor)
library(hetmeta)
library(cowplot)
library(knitr)
library(kableExtra)
data("red_bc")
chr_red <- red_bc %>%
group_by(id) %>%
summarise(xref = dose[se == 0], min = min(dose), p25 = quantile(dose, .25),
median = median(dose), p75 = quantile(dose, .75), max = max(dose))
kable(chr_red, "latex", align = "c", booktabs = T, escape = F, digits = 1,
col.names = c("ID", "Referent", "Min", "P25", "Median", "P75", "Max"),
caption = "Descriptive statistics of the assigned dose levels for 13 studies
included in a dose--response meta-analysis between red meat consumption and bladder
cancer risk")
ggplot(chr_red, aes(x = min, y = seq_along(id))) +
geom_point(aes(x = xref), shape = 4, size = 1.5) +
geom_segment(aes(xend = max, yend = seq_along(id)), linetype = "dotted") +
geom_point(data = filter(red_bc, se != 0) %>%
mutate(id = replace(id, id > 12, id[id > 12] - 1)), aes(x = dose, y = id)) +
labs(x = "Red meat consumption (g per day)", y = "Study ID") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.minor.y=element_blank(),
panel.grid.major.y=element_blank())
fpgrid <- as.matrix(fpgrid())
#max(chr_red$ref)
shift <- 10
scale <- 10
Slist_red <- do.call("list", by(red_bc, red_bc$id, function(x){
if (any(is.na(x$n))){
diag(x$se[x$se!=0]^2, ncol = length(x$se[x$se!=0]))
} else {
covar.logrr(y = logrr, v = I(se^2), cases = cases, n = n,
type = type, data = x)
}
}))
# individual fp2 model: 13 lists of 36
mod_pi_red <- map2(split(red_bc, red_bc$id), Slist_red,
~ lapply(array_branch(fpgrid, 1), function(p)
dosresmeta(logrr ~ fracpol(dose, p = p, shift = shift, scale = scale),
se = se, data = .x, covariance = "user", Slist = .y)
))
AIC_pi_red <- lapply(mod_pi_red, function(x) sapply(x, AIC))
pb_red <- lapply(AIC_pi_red, which.min)
fpgrid[unlist(pb_red), ]
# 13 lists of 1 model
mod_pb_red <- Map(function(x, y) x[[y]], mod_pi_red, pb_red)
# combined fp2 model: list of 36
mod_pi1_red <- map(array_branch(fpgrid, 1),
~ dosresmeta(logrr ~ fracpol(dose, p = .x, shift = shift, scale = scale),
id = id, se = se, data = red_bc, covariance = "user",
Slist = Slist_red, proc = "1stage"))
# final model
mod_pb1_red <- mod_pi1_red[[which.min(sapply(mod_pi1_red, AIC))]]
AIC_pi_red
lapply(AIC_pi_red, round, 2) %>%
do.call("cbind", .) %>%
`rownames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
rbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "p")
lapply(AIC_pi_red, round, 2) %>%
do.call("cbind", .) %>%
`rownames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
rbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "p") %>% t()
?t
lapply(AIC_pi_red, round, 2)
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .)
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")")))
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
)
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame()
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "Study ID") %>%
`colnames<-`(unique(red_bc$id))
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "Study ID") %>%
`rownames<-`(unique(red_bc$id))
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "Study ID") %>%
`rownames<-`(unique(red_bc$id)) %>%
kableExtra::landscape()
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "Study ID") %>%
`rownames<-`(unique(red_bc$id)) %>%
kable("latex", align = "c", booktabs = T, escape = F,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
kable_styling(font_size = 8)
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "Study ID") %>%
`rownames<-`(unique(red_bc$id)) %>%
kable("latex", align = "c", booktabs = T, escape = F,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
kable_styling(font_size = 8, latex_options = "scale_down")
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "Study ID") %>%
`rownames<-`(unique(red_bc$id)) %>%
kable("latex", align = "c", booktabs = T, escape = F,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
kable_styling(font_size = 8, latex_options = "scale_down") %>%
landscape()
?landscape
landscape(knitr::kable(head(mtcars), "latex"))
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "Study ID") %>%
`rownames<-`(unique(red_bc$id)) %>%
kable("latex", align = "c", booktabs = T, escape = F,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
landscape() %>%
kable_styling(font_size = 8)
lapply(AIC_pi_red, round, 2) %>%
do.call("rbind", .) %>%
`colnames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
cbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
mutate(
`Study ID` = unique(red_bc$id)
) %>%
kable("latex", align = "c", booktabs = T, escape = F,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
landscape() %>%
kable_styling(font_size = 8)
lapply(AIC_pi_red, round, 2) %>%
do.call("cbind", .) %>%
`rownames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
rbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "p") %>%
kable("latex", align = "c", booktabs = T, escape = F,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
kable_styling(font_size = 8, latex_options = c("striped")) %>%
landscape()
lapply(AIC_pi_red, round, 2) %>%
do.call("cbind", .) %>%
`rownames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
rbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "p") %>%
kable("latex", booktabs = T, longtable = T,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
landscape()
?add_header_above
lapply(AIC_pi_red, round, 2) %>%
do.call("cbind", .) %>%
`rownames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
rbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "p") %>%
kable("latex", align = "c", booktabs = T, escape = F, longtable = T,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
add_header_above(c(" ", "Study ID" = 2)) %>%
kable_styling(font_size = 12, latex_options = c("repeat_header")) %>%
landscape()
lapply(AIC_pi_red, round, 2) %>%
do.call("cbind", .) %>%
`rownames<-`(apply(fpgrid, 1, function(f) paste0("(", paste(f, collapse = ", "), ")"))) %>%
rbind(
`best p` = apply(fpgrid[unlist(pb_red), ], 1, function(f) paste(f, collapse = ", "))
) %>%
as.data.frame() %>%
rownames_to_column(var = "p") %>%
kable("latex", align = "c", booktabs = T, escape = F, longtable = T,
caption = "AIC for the study-specific second-degree fractional polynomials with power terms specified by $p$ in a dose-response meta-analysis between red mead consumption (g per day) and bladder cancer risk. The last row reports the power term corresponding to the lowest AIC.") %>%
add_header_above(c(" " = 1, "Study ID" = 13)) %>%
kable_styling(latex_options = c("repeat_header")) %>%
landscape()
?data
data(package = "dosresmeta")
try(data(package = "dosresmeta"))
data(package = "dosresmeta")
data(package = "dosresmeta")$results
d <- data(package = "dosresmeta")$results
cbind(Name = d$Item, Description = d$Title)
d
cbind(Name = d[, "Item"], Description = d[, "Title"])
library(kableExtra)
cbind(Name = d[, "Item"], Description = d[, "Title"]) %>%
kable()
library(tidyverse)
cbind(Name = d[, "Item"], Description = d[, "Title"]) %>%
kable()
library(knitr)
cbind(Name = d[, "Item"], Description = d[, "Title"]) %>%
kable()
data(package = "dosresmeta")
d <- data(package = "dosresmeta")$results
cbind(Name = d[, "Item"], Description = d[, "Title"]) %>%
kable(booktabs = T, caption = "Data sets available in the \\pkg{dosresmeta} $\\R$ package.") %>%
kable_styling(full_width = F) %>%
column_spec(2, width = "32em")
cbind(Name = d[, "Item"], Description = d[, "Title"]) %>%
kable(format = "latex", booktabs = T, caption = "Data sets available in the \\pkg{dosresmeta} $\\R$ package.") %>%
kable_styling(full_width = F) %>%
column_spec(2, width = "32em")
library(dosresmeta)
data("coffee_mort")
lin <- dosresmeta(logrr ~ dose, id = id, type = type, cases = cases, n = n,
se = se, data = coffee_mort)
lin <- dosresmeta(logrr ~ dose, id = id, type = type, cases = cases, n = n,
se = se, data = coffee_mort, proc = "1stage")
lin <- dosresmeta(logrr ~ dose, id = id, type = type, cases = cases, n = n,
se = se, data = coffee_mort, proc = "1stage")
logLik(lin)
AIC(lin)
-2*logLik(lin)+2
-2*logLik(lin)
-2*logLik(lin)+2*2
quadr <- dosresmeta(logrr ~ dose + I(dose^2), id = id, type = type, cases = cases, n = n,
se = se, data = coffee_mort, proc = "1stage")
logLik(quadr)
?lmer
VarCorr(lin)
logLik(lin)
quadr <- dosresmeta(logrr ~ dose + I(dose^2), id = id, type = type, cases = cases, n = n,
se = se, data = coffee_mort, proc = "1stage")
logLik(quadr)
library(dosresmeta)
library(knitr)
opts_knit$set(self.contained=FALSE, out.format = "latex")
opts_chunk$set(echo = FALSE, message = FALSE, comment = NA, fig.path = "../figure/",
out.width = "\\textwidth", cache = FALSE, highlight = F, background = "white",
fig.align = "center", fig.width = 7, fig.height = 4.5, fig.pos= "ht!",
prompt = TRUE, size = "footnotesize", warning = FALSE)
options(prompt ="R> ", width = 85, show.signif.stars = FALSE, knitr.kable.NA = '')
knit_theme$set("print")
pkgs <- c("knitr", "tidyverse", "dosresmeta", "lubridate", "rworldmap", "Epi", "xtable",
"cowplot", "gridExtra", "scales", "kableExtra", "rms", "metafor", "hetmeta")
lapply(pkgs, require, character.only = TRUE)
# loading libraries and useful functions
source("code/functions.R")
# loading data
data_names <- paste0("data/",
c("count_meta", "count_grl", "count_dosresmeta", "res_cov_lin",
"res_cov_quadr", "breast_1501", "hyp_vi"),
".RData")
lapply(data_names, load, .GlobalEnv)
# setting a ggplot theme for all the plots
theme_kappa <- theme_light() +
theme(panel.border = element_blank(), axis.line = element_line(),
plot.title = element_text(hjust = 0.5))
theme_set(theme_kappa)
sessionInfo()
28/50
library(knitr)
opts_knit$set(self.contained=FALSE, out.format = "latex")
opts_chunk$set(echo = FALSE, message = FALSE, comment = NA, fig.path = "../figure/",
out.width = "\\textwidth", cache = TRUE, highlight = F, background = "white",
fig.align = "center", fig.width = 7, fig.height = 4.5, fig.pos= "ht!",
prompt = TRUE, size = "footnotesize", warning = FALSE)
options(prompt ="R> ", width = 85, show.signif.stars = FALSE, knitr.kable.NA = '')
knit_theme$set("print")
pkgs <- c("knitr", "tidyverse", "dosresmeta", "lubridate", "rworldmap", "Epi", "xtable",
"cowplot", "gridExtra", "scales", "kableExtra", "rms", "metafor", "hetmeta")
lapply(pkgs, require, character.only = TRUE)
# loading libraries and useful functions
source("code/functions.R")
# loading data
data_names <- paste0("data/",
c("count_meta", "count_grl", "count_dosresmeta", "res_cov_lin",
"res_cov_quadr", "breast_1501", "hyp_vi"),
".RData")
lapply(data_names, load, .GlobalEnv)
# setting a ggplot theme for all the plots
theme_kappa <- theme_light() +
theme(panel.border = element_blank(), axis.line = element_line(),
plot.title = element_text(hjust = 0.5))
theme_set(theme_kappa)
betas_lin
mean(betas_lin$beta)
betas_lin %>%
group_by(cov) %>%
summarise(mean(beta))
betas_lin %>%
group_by(cov) %>%
summarise(median(beta))
bvcov_lin
bvcov_lin %>%
group_by(cov) %>%
summarise(mean(vcov^.5))
View(bvcov_lin)
tapply(bvcov_lin$vcov^.5, bvcov_lin$vcov, mean)
tapply(bvcov_lin$vcov^.5, bvcov_lin$cov, mean)
se_m <- tapply(bvcov_lin$vcov^.5, bvcov_lin$cov, mean)
se_m <- tapply(bvcov_lin$vcov^.5, bvcov_lin$cov, mean)
se_m[2]/se_m[1]
1 - se_m[2]/se_m[1]
100*(1 - se_m[2]/se_m[1])
round(100*(1 - se_m[2]/se_m[1]))
bvcov_quadr
bvcov_quadr %>%
group_by(cov, coef) %>%
summarise(mean(vcov^.5))
se_m <- tapply(bvcov_quadr$vcov^.5, cbind(bvcov_quadr$cov, bvcov_quadr$coef), mean)
se_m2 <- tapply(bvcov_quadr$vcov^.5, paste(bvcov_quadr$cov, bvcov_quadr$coef), mean)
se_m2
se_m2[4]
se_m2[4]/se_m2[1]
100*(1 - se_m2[4]/se_m2[1])
round(100*(1 - se_m2[4]/se_m2[1]))
se_m2[6]/se_m2[3]
100*(se_m2[6]/se_m2[3] - 1)
round(100*(se_m2[6]/se_m2[3] - 1))
17/42
install.packages("timelineS")
pkgs <- c("knitr", "tidyverse", "dosresmeta", "lubridate", "rworldmap", "Epi", "xtable",
"cowplot", "gridExtra", "scales", "kableExtra", "rms", "metafor", "hetmeta",
"timelineS")
lapply(pkgs, require, character.only = TRUE)
old
old
?timelineS
par(mar = c(3.1, 4.1, 2.1, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .7, .6, .6, .1))
drm_versions <- data.frame(
Events = c("First release (v 1.0) \n 'gl' and 'hamling' functions \n",
"Introduction of S3 methods \n and documentation in roxygen2 \n",
"First development version on GitHub \n",
"Shiny app \n",
"Major release (v 2.0) \n one-stage, meta-regression, \n differences in means \n"),
Event_Dates = as.Date(c("2013-09-09", "2014-01-17", "2015-08-06", "2017-07-31", "2017-08-17"))
)
par(mar = c(3.1, 4.1, 2.1, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .7, .6, .6, .1))
par(mar = c(2.1, 4.1, 2.1, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .7, .6, .6, .1))
par(mar = c(2.1, 4.1, 1.1, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .7, .6, .6, .1))
par(mar = c(1.1, 4.1, 1.1, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .7, .6, .6, .1))
par(mar = c(1.1, 4.1, 0.1, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .7, .6, .6, .1))
par(mar = c(1.1, 4.1, 0, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .7, .6, .6, .1))
par(old)
par(mar = c(1, 4.1, 0, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .4, .6, .5, .1))
par(mar = c(0, 4.1, 0, 2.1))
timelineS(drm_versions[1:5, ],
label.direction = "updown", label.position = c(3, 1, 3, 1, 3),
label.length = c(.1, .4, .6, .5, .1))
par(old)
devtools::install_github("alecri/dosresmeta")
d <- data(package = "dosresmeta")$results
Item <- gsub("_", "\\\\_", d[, "Item"])
d
library(knitr)
opts_knit$set(self.contained=FALSE, out.format = "latex")
opts_chunk$set(echo = FALSE, message = FALSE, comment = NA, fig.path = "../figure/",
out.width = "\\textwidth", cache = TRUE, highlight = F, background = "white",
fig.align = "center", fig.width = 7, fig.height = 4.5, fig.pos= "ht!",
prompt = TRUE, size = "footnotesize", warning = FALSE)
options(prompt ="R> ", width = 85, show.signif.stars = FALSE, knitr.kable.NA = '')
old <- par()
knit_theme$set("print")
pkgs <- c("knitr", "tidyverse", "dosresmeta", "lubridate", "rworldmap", "Epi", "xtable",
"cowplot", "gridExtra", "scales", "kableExtra", "rms", "metafor", "hetmeta",
"timelineS")
lapply(pkgs, require, character.only = TRUE)
# loading libraries and useful functions
source("code/functions.R")
# loading data
data_names <- paste0("data/",
c("count_meta", "count_grl", "count_dosresmeta", "res_cov_lin",
"res_cov_quadr", "breast_1501", "hyp_vi"),
".RData")
lapply(data_names, load, .GlobalEnv)
# setting a ggplot theme for all the plots
theme_kappa <- theme_light() +
theme(panel.border = element_blank(), axis.line = element_line(),
plot.title = element_text(hjust = 0.5))
theme_set(theme_kappa)
head(betas_quadr)
plot_gri
devtools::install_github("alecri/dosresmeta")
