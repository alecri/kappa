aes(y = categories, linetype = "Categories"))
}
p_comp
# model comparison
quadr_ml <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage", method = "ml")
spk_ml <- dosresmeta(logrr ~ I(1*(dose < 1)) + I((dose-1)*(dose >= 1)) +
I((dose-6)*(dose >= 6)),
id = id, se = se, data = coffee,
covariance = "user", proc = "1stage", method = "ml",
Slist = Slist, control = list(maxiter = 5000))
k2 <- c(0, 1, 3, 5, 7, 10)
categ <- dosresmeta(logrr ~ relevel(cut(dose, breaks = k2, include.lowest = T, right = F), 2),
id = id, se = se, data = coffee,
covariance = "user", proc = "1stage", method = "ml",
Slist = Slist, control = list(maxiter = 5000))
sapply(list(quadr = quadr_ml, spk = spk_ml, categ = categ), AIC)
xref <- 1
comp <- rbind(xref, newd) %>%
mutate(
quadr = predict(quadr_ml, ., expo = T)$pred,
spike = predict(spk_ml, ., expo = T)$pred,
categories = predict(categ, ., expo = T)$pred
)
p_comp <- ggplot(comp, aes(dose, quadr, linetype = "Quadratic")) +
geom_line() +
geom_line(data = subset(comp, dose < 1), aes(y = spike, linetype = "Spike at 0")) +
geom_line(data = subset(comp, dose >= 1), aes(y = spike, linetype = "Spike at 0")) +
scale_y_continuous(trans = "log", breaks = pretty_breaks()) +
labs(x = "Coffee consumption (cups/day)", y = "Relative risk", linetype = "Model") +
scale_linetype_manual(values = c(`Quadratic` = "dashed", `Spike at 0` = "solid",
`Categories` = "longdash"))
for (i in seq_along(k2[-1])){
p_comp <- p_comp + geom_line(data = subset(comp, dose >= k2[i] & dose < k2[i+1]),
aes(y = categories, linetype = "Categories"))
}
p_comp
# model comparison
quadr_ml <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage", method = "ml")
spk_ml <- dosresmeta(logrr ~ I(1*(dose < 1)) + I((dose-1)*(dose >= 1)) +
I((dose-4)*(dose >= 4)),
id = id, se = se, data = coffee,
covariance = "user", proc = "1stage", method = "ml",
Slist = Slist, control = list(maxiter = 5000))
k2 <- c(0, 1, 3, 5, 7, 10)
categ <- dosresmeta(logrr ~ relevel(cut(dose, breaks = k2, include.lowest = T, right = F), 2),
id = id, se = se, data = coffee,
covariance = "user", proc = "1stage", method = "ml",
Slist = Slist, control = list(maxiter = 5000))
sapply(list(quadr = quadr_ml, spk = spk_ml, categ = categ), AIC)
xref <- 1
comp <- rbind(xref, newd) %>%
mutate(
quadr = predict(quadr_ml, ., expo = T)$pred,
spike = predict(spk_ml, ., expo = T)$pred,
categories = predict(categ, ., expo = T)$pred
)
p_comp <- ggplot(comp, aes(dose, quadr, linetype = "Quadratic")) +
geom_line() +
geom_line(data = subset(comp, dose < 1), aes(y = spike, linetype = "Spike at 0")) +
geom_line(data = subset(comp, dose >= 1), aes(y = spike, linetype = "Spike at 0")) +
scale_y_continuous(trans = "log", breaks = pretty_breaks()) +
labs(x = "Coffee consumption (cups/day)", y = "Relative risk", linetype = "Model") +
scale_linetype_manual(values = c(`Quadratic` = "dashed", `Spike at 0` = "solid",
`Categories` = "longdash"))
for (i in seq_along(k2[-1])){
p_comp <- p_comp + geom_line(data = subset(comp, dose >= k2[i] & dose < k2[i+1]),
aes(y = categories, linetype = "Categories"))
}
p_comp
categ
# model comparison
quadr_ml <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage", method = "ml")
spk_ml <- dosresmeta(logrr ~ I(1*(dose < 1)) + I((dose-1)*(dose >= 1)) +
I((dose-4)*(dose >= 4)),
id = id, se = se, data = coffee,
covariance = "user", proc = "1stage", method = "ml",
Slist = Slist, control = list(maxiter = 5000))
predict(spk_ml)
newd_tab
predict(spk_ml, newd_tab = rbind(xref, newd), expo = T)
spk_ml
coef(spk_ml)
newd
newd_tab
newd_tab2 <- data.frame(dose = c(1, 0, 2:6))
predict(spk_ml, newd_tab2, expo = F)
cbind(newd_tab2,
predict(spk_ml, newd_tab2, expo = F)
)
cbind(newd_tab2,
predict(spk_ml, newd_tab2, expo = F)[-c(1:3), ]
)
predict(spk_ml, newd_tab2, expo = F)[-c(1:3), ]
cbind(newd_tab2,
predict(spk_ml, newd_tab2, expo = F)[, -c(1:3)]
)
pred_tab2 <- cbind(
newd_tab2,
predict(spk_ml, newd_tab2, expo = F)[, -c(1:3)]
)
pred_tab2[2, -1]
coef(spk_ml)
coef(spk_ml)[2]
exp(coef(spk_ml)[2])
pred_tab2
-0.04385912+-0.02192956
-0.06578867+0.04385912
-0.04385912+0.02192956
exp(coef(spk_ml)[2])
sum_spl <- summary(spk_ml)
sum_spk <- summary(spk_ml)
sum_spk$coefficients
sum_spk$coefficients[2, c(1, 5:6)]
exp(sum_spk$coefficients[2, c(1, 5:6)])
round(exp(sum_spk$coefficients[2, c(1, 5:6)]), 2)
pred_tab2[2, -1]
pred_spk3a <- round(exp(sum_spk$coefficients[3, c(1, 5:6)]), 2)
pred_tab2
pred_spk1 <- round(exp(pred_tab2[2, -1]), 2)
pred_spk1
pred_tab2
-0.07412414+0.06578867
-0.08245961+0.07412414
sum_spk$coefficients[3, c(1, 5:6)]
pred_spk2[1] + sum_spk$coefficients[3, 1]
pred_spk2 <- round(exp(sum_spk$coefficients[2, c(1, 5:6)]), 2)
sum_spk$coefficients[2, 1]) + sum_spk$coefficients[3, 1]
sum_spk$coefficients[2, 1] + sum_spk$coefficients[3, 1]
?ci.lin
Epi::ci.lin
library(Epi)
library(Epi)
?ci.lin
cbind(0, 1, 1)
ci.lin(spk_ml, ctr.mat = cbind(0, 1, 1))
ci.lin(spk_ml, ctr.mat = cbind(0, 1, 1))[, c(1, 5:5)]
ci.lin(spk_ml, ctr.mat = cbind(0, 1, 1))[, c(1, 5:6)]
exp(ci.lin(spk_ml, ctr.mat = cbind(0, 1, 1))[, c(1, 5:6)])
round(exp(ci.lin(spk_ml, ctr.mat = cbind(0, 1, 1))[, c(1, 5:6)]), 3)
xref <- 1
comp <- rbind(xref, newd) %>%
mutate(
quadr = predict(quadr_ml, ., expo = T)$pred,
spike = predict(spk_ml, ., expo = T)$pred,
categories = predict(categ, ., expo = T)$pred
)
p_comp <- ggplot(comp, aes(dose, quadr, linetype = "Quadratic")) +
geom_line() +
geom_line(data = subset(comp, dose < 1), aes(y = spike, linetype = "Spike at 0")) +
geom_line(data = subset(comp, dose >= 1), aes(y = spike, linetype = "Spike at 0")) +
scale_y_continuous(trans = "log", breaks = pretty_breaks()) +
labs(x = "Coffee consumption (cups/day)", y = "Relative risk", linetype = "Model") +
scale_linetype_manual(values = c(`Quadratic` = "dashed", `Spike at 0` = "solid",
`Categories` = "longdash"))
for (i in seq_along(k2[-1])){
p_comp <- p_comp + geom_line(data = subset(comp, dose >= k2[i] & dose < k2[i+1]),
aes(y = categories, linetype = "Categories"))
}
p_comp
pred_spk1
(pred_spk1[1] - 1)
100*(pred_spk1[1] - 1)
paste(pred_spk1[1:2], sep = ", ")
paste(pred_spk1[1:2], collapse = ", ")
paste(pred_spk1[2:3], collapse = ", ")
pred_spk2
1 - pred_spk2[2]
1 - pred_spk2[1]
100*(1 - pred_spk2[1])
100*(1 - pred_spk3b[1])
pred_spk2 <- round(exp(sum_spk$coefficients[2, c(1, 5:6)]), 2)
pred_spk3a <- round(exp(sum_spk$coefficients[3, c(1, 5:6)]), 2)
pred_spk3b <- round(exp(ci.lin(spk_ml, ctr.mat = cbind(0, 1, 1))[, c(1, 5:6)]), 3)
pred_spk3b <- round(exp(ci.lin(spk_ml, ctr.mat = cbind(0, 1, 1))[, c(1, 5:6)]), 3)
100*(1 - pred_spk3b[1])
paste(pred_spk3b[2:3], collapse = ", ")
pred_spk3b <- round(exp(ci.lin(spk_ml, ctr.mat = cbind(0, 1, 1))[, c(1, 5:6)]), 2)
paste(pred_spk3b[2:3], collapse = ", ")
pred_spk3a
log(pred_spk3a)
sum_spk$coefficients[3, c(1, 5:6)]
spk_ml
pred_spk3a <- round(sum_spk$coefficients[3, c(1, 5:6)], 2)
pred_spk3a[1]
summary(categ)
summary(categ)$coeffients
summary(categ)$coefficients
summary(categ)$coefficients[-1, c(1, 5:6)]
exp(summary(categ)$coefficients[-1, c(1, 5:6)])
exp(summary(categ)$coefficients[-1, c(1, 5:6)])
exp(summary(categ)$coefficients[, c(1, 5:6)])
pred_cat
pred_cat_os <- exp(summary(categ)$coefficients[, c(1, 5:6)])
pred_cat_os[1]
pred_cat_os[1, 1]
pred_cat_os <- round(exp(summary(categ)$coefficients[, c(1, 5:6)]), 2)
100*(pred_cat_os[1, 1] - 1)
paste(pred_cat_os[1, 2:3], sep = ", ")
waldtest(vcov(categ), coef(cat), 2:4)
waldtest(vcov(categ), coef(categ), 2:4)
categ_test <- waldtest(vcov(categ), coef(categ), 2:4)
categ_test$chitest
categ_test$chitest[1, 3]
categ_test$chitest[c(1, 3)]
categ_test
waldtest(vcov(categ), coef(categ), 2:4)$chitest
waldtest(vcov(categ), coef(categ), 2:4)$chitest[c(1, 3)]
round(waldtest(vcov(categ), coef(categ), 2:4)$chitest[c(1, 3)], 2)
categ_test <- round(waldtest(vcov(categ), coef(categ), 2:4)$chitest[c(1, 3)], 2)
categ_test
AIC_os <- sapply(list(quadr = quadr_ml, spk = spk_ml, categ = categ), AIC)
AIC_os <- round(sapply(list(quadr = quadr_ml, spk = spk_ml, categ = categ), AIC), 2)
AIC_os
AIC_os <- round(sapply(list(quadr = quadr_ml, spk = spk_ml, categ = categ), AIC), 2)
AIC_os
AIC_os <- round(sapply(list(quadr = quadr_ml, spk = spk_ml, categ = categ), AIC))
library(lmtest)
install.packages("lmtest")
library(lmtest)
# meta-regression
quadr_reg <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage",
mod = ~ gender)
coffee_vpc <- coffee %>%
filter(se != 0) %>%
mutate(
`Quadratic` = vpc(onestage),
`Quadratic meta-regression` = vpc(quadr_reg)
) %>%
gather(curve, vpc, Quadratic:`Quadratic meta-regression`)
lrtest(quadr_reg, onestage)
# meta-regression
quadr_reg <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage",
mod = ~ gender, method = "ml")
lrtest(quadr_reg, quadr_ml)
# meta-regression
quadr_reg <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage",
mod = ~ gender, method = "ml")
summary(quadr_reg)
# meta-regression
quadr_reg <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage",
mod = ~ gender, method = "reml")
summary(quadr_reg)
lrtest(quadr_reg, quadr_ml)
onestage
lrtest(quadr_reg, onestage)
# meta-regression
quadr_reg <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage",
mod = ~ gender, method = "ml")
summary(quadr_reg)
# meta-regression
quadr_reg <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage",
mod = ~ gender, method = "reml")
summary(quadr_reg)
lrtest(quadr_reg, onestage)
summary(quadr_reg)
waldtest(vcov(quadr_reg), coef(quadr_reg), 3:6)
# meta-regression
quadr_reg <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage",
mod = ~ gender, method = "reml")
dosresmeta::waldtest(vcov(quadr_reg), coef(quadr_reg), 3:6)
# meta-regression
quadr_reg <- dosresmeta(logrr ~ dose + I(dose^2), id = id, se = se, data = coffee,
covariance = "user", Slist = Slist, proc = "1stage",
mod = ~ gender, method = "reml")
lrtest(quadr_reg, onestage)
dosresmeta::waldtest(vcov(quadr_reg), coef(quadr_reg), 3:6)
detach("package:lmtest", unload=TRUE)
chitest_reg <- waldtest(vcov(quadr_reg), coef(quadr_reg), 3:6)
waldtest(vcov(quadr_reg), coef(quadr_reg), 3:6)$chitest
chitest_reg <- waldtest(vcov(quadr_reg), coef(quadr_reg), 3:6)$chitest[c(1, 3)]
?ggsave
library(dosresmeta)
library(tidyverse)
library(Epi)
# linear model on IPD
lin_IPD <- glm(Y ~ age + histology + maritalStatus + race +
tumor_size + radiation + grade + ER + PR + node_pos,
data = breast_1501, family = "poisson", offset = log(surv_time))
# data selected from paper IV
load("data/breast_1501.RData")
# linear model on IPD
lin_IPD <- glm(Y ~ age + histology + maritalStatus + race +
tumor_size + radiation + grade + ER + PR + node_pos,
data = breast_1501, family = "poisson", offset = log(surv_time))
summary(lin_IPD)
?cut
breast_1501$age_cat <- cut(breast_1501$age, 5,
include.lowest = T)
table(breast_1501$age_cat)
quantile(breast_1501$age, c(0, .25, .5, .75, 1))
# categorical model on IPD
k_cat <- quantile(breast_1501$age, c(0, .25, .5, .75, 1))
breast_1501$age_cat <- cut(breast_1501$age, k_cat, include.lowest = T)
table(breast_1501$age_cat)
pos <- 1
cat_1501 <- glm(Y ~ relevel(age_cat, 1) + histology + maritalStatus + race +
tumor_size + radiation + grade + ER + PR + node_pos,
data = breast_1501, family = "poisson", offset = log(surv_time))
summary(cat_1501)
# creatig aggregated data
cat_res <- ci.exp(cat_1501)[1:4,] %>%
data.frame() %>%
mutate(
ci = paste0("(", round(X2.5., 2), ", ", round(X97.5., 2), ")"),
logrr = coef(cat_1501)[1:4],
se = diag(vcov(cat_1501))[1:4]^.5,
refpos = c(pos, setdiff(1:4, pos))
) %>%
arrange(refpos)
cat_res[pos, ] <- c(1, 1, 1, NA, 0, 0, pos)
tab_1501 <-breast_1501 %>%
group_by(age_cat) %>%
summarise(dose = mean(age),
cases = sum(Y),
PT = sum(surv_time)) %>%
cbind(cat_res)
# linear model on AD using method by GL
lin_ad_gl <- dosresmeta(logrr ~ dose, type = "ir", se = se, cases = cases, n = PT,
data = tab_1501)
# linear model on AD using method by GL
lin_ad_h <- dosresmeta(logrr ~ dose, type = "ir", se = se, cases = cases, n = PT,
data = tab_1501, covariance = "h")
dosresmeta::covar.logrr
hamling(y = logrr, v = se^2, cases = cases, n = PT, type = "ir", data = tab_1501)
ec_h <- hamling(y = logrr, v = se^2, cases = cases, n = PT, type = "ir", data = tab_1501)
ec_h$A
ec_h[, 1]
glm(cbind(ec_h[, 1], ec_h[, 2]-ec_h[, 1])~ dose)
glm(cbind(ec_h[, 1], ec_h[, 2]-ec_h[, 1])~ tab_1501$dose)
ec_h <- hamling(y = logrr, v = se^2, cases = cases, n = PT, type = "ir", data = tab_1501) %>%
as.data.frame() %>%
mutate(
cases = A,
controls = N - A,
dose = tab_1501$dose
)
ec_h
ec_h <- hamling(y = logrr, v = se^2, cases = cases, n = PT, type = "ir", data = tab_1501) %>%
as.data.frame() %>%
mutate(
cases = round(A),
n = round(N),
controls = round(N - A),
dose = tab_1501$dose
)
glm(cbind(cases, controls)~ dose, data = ec_h)
glm(cbind(cases, controls) ~ dose, data = ec_h)
ec_h
glm(cbind(cases, controls) ~ 1, data = ec_h)
glm(cbind(cases, controls) ~ 1, data = ec_h, family = "binomiaL")
glm(cbind(cases, controls) ~ 1, data = ec_h, family = "binomial")
glm(cbind(cases, controls) ~ dose, data = ec_h, family = "binomial")
lin_ad_h
lin_glm_ci <- glm(cases ~ dose, data = ec_h, family = "poisson", offset = n)
lin_glm_ci <- glm(cases ~ dose, data = ec_h, family = "poisson", offset = log(n))
lin_glm_ci
modi <- list(lin_ad_gl, lin_ad_h, lin_glm_cc, lin_glm_ci)
lin_glm_cc <- glm(cbind(cases, controls) ~ dose, data = ec_h, family = "binomial")
lin_glm_ci <- glm(cases ~ dose, data = ec_h, family = "poisson", offset = log(n))
modi <- list(lin_ad_gl, lin_ad_h, lin_glm_cc, lin_glm_ci)
data.frame(
coef = sapply(modi, coef)
)
results <- data.frame(
coef = sapply(modi, function(x) coef(x)[1])
)
results
results <- data.frame(
coef = sapply(modi, function(x) coef(x)[1]),
se = sapply(modi, function(x) vcov(x)[2, 2])
)
sapply(modi[1:2], coef)
c(sapply(modi[1:2], coef), sapply(modi[3:4], function(x) coef(x)[2]))
sapply(modi, vcov)
modi[1:2]
sapply(modi[1:2], vcov)
results <- data.frame(
coef = c(sapply(modi[1:2], coef), sapply(modi[3:4], function(x) coef(x)[2])),
se = c(sapply(modi[1:2], vcov), sapply(modi[3:4], function(x) vcov(x)[4]))^.5
)
results
modi <- list(lin_ad_gl, lin_ad_h, lin_glm_cc, lin_glm_ci)
results <- data.frame(
coef = c(sapply(modi[1:2], coef), sapply(modi[3:4], function(x) coef(x)[2])),
se = c(sapply(modi[1:2], vcov), sapply(modi[3:4], function(x) vcov(x)[4]))^.5
ci.lb = coef - 1.96*se, ci.ub = coef + 1.96*se
)
results <- data.frame(
coef = c(sapply(modi[1:2], coef), sapply(modi[3:4], function(x) coef(x)[2])),
se = c(sapply(modi[1:2], vcov), sapply(modi[3:4], function(x) vcov(x)[4]))^.5,
ci.lb = coef - 1.96*se, ci.ub = coef + 1.96*se
)
results <- data_frame(
coef = c(sapply(modi[1:2], coef), sapply(modi[3:4], function(x) coef(x)[2])),
se = c(sapply(modi[1:2], vcov), sapply(modi[3:4], function(x) vcov(x)[4]))^.5,
ci.lb = coef - 1.96*se, ci.ub = coef + 1.96*se
)
results
ggplot(results, aes(x = 1, y = coef))
ggplot(results, aes(x = 1, y = coef)) +
geom_point()
?geom_errorbar
ggplot(results, aes(x = 1, y = coef)) +
geom_point() +
geom_errorbar(aes(ymin = ci.lb, ymax = ci.ub))
ggplot(results, aes(x = 1:4, y = coef)) +
geom_point() +
geom_errorbar(aes(ymin = ci.lb, ymax = ci.ub))
ggplot(results, aes(x = 1:4, y = coef)) +
geom_point() +
geom_errorbar(aes(ymin = ci.lb, ymax = ci.ub)) +
coord_flip()
ggplot(results, aes(x = 1:4, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip()
ggplot(results, aes(x = 1:4, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
labs(x = "Relative risk (95% CI)")
ggplot(results, aes(x = 1:4, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
labs(y = "Relative risk (95% CI)")
?scale_x_discrete
ggplot(results, aes(x = 1:4, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
scale_x_discrete(labels = letters[1:4]) +
labs(y = "Relative risk (95% CI)")
letters[1:4]
ggplot(results, aes(x = 1:4, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
scale_x_discrete("Analysis", labels = letters[1:4]) +
labs(y = "Relative risk (95% CI)")
modi
results <- data_frame(
analysis = c("GL", "Hamling", "logit EC", "poisson EC"),
coef = c(sapply(modi[1:2], coef), sapply(modi[3:4], function(x) coef(x)[2])),
se = c(sapply(modi[1:2], vcov), sapply(modi[3:4], function(x) vcov(x)[4]))^.5,
ci.lb = coef - 1.96*se, ci.ub = coef + 1.96*se
)
ggplot(results, aes(x = analysis, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
#  scale_x_discrete("Analysis", labels = letters[1:4]) +
labs(y = "Relative risk (95% CI)")
ggplot(results, aes(x = analysis, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
#  scale_x_discrete("Analysis", labels = letters[1:4]) +
labs(y = "Relative risk (95% CI)", x = "")
library(scales)
ggplot(results, aes(x = analysis, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
scale_y_continuous(trans = "log", breaks = pretty_breaks(), limits = c(.8, 1.2)) +
labs(y = "Relative risk (95% CI)", x = "")
ggplot(results, aes(x = analysis, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
scale_y_continuous(trans = "log", breaks = pretty_breaks(), limits = c(.9, 1.1)) +
labs(y = "Relative risk (95% CI)", x = "")
ggplot(results, aes(x = analysis, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
scale_y_continuous(trans = "log", breaks = pretty_breaks(), limits = c(.95, 1.05)) +
labs(y = "Relative risk (95% CI)", x = "")
ggplot(results, aes(x = analysis, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub))) +
coord_flip() +
scale_y_continuous(trans = "log", breaks = pretty_breaks(), limits = c(.98, 1.02)) +
labs(y = "Relative risk (95% CI)", x = "")
?geom_errorbar
ggplot(results, aes(x = analysis, y = exp(coef))) +
geom_point() +
geom_errorbar(aes(ymin = exp(ci.lb), ymax = exp(ci.ub)), width = 0.2) +
coord_flip() +
scale_y_continuous(trans = "log", breaks = pretty_breaks(), limits = c(.98, 1.02)) +
labs(y = "Relative risk (95% CI)", x = "")
summary(lin_IPD)
lin_glm_ci
lin_glm_cc
packrat::snapshot(prompt = FALSE)
remove.packages(c("bitops", "caTools", "countrycode", "git2r", "googleVis", "here", "highlight"))
install.packages("dotCall64")
packrat::set_opts(vcs.ignore.lib = FALSE)
packrat::restore(prompt = FALSE)
install.packages(c("backports", "broom", "callr", "curl", "dbplyr", "digest", "Epi", "fields", "git2r", "haven", "Hmisc", "hms", "htmlTable", "htmlwidgets", "knitr", "MASS", "mvtnorm", "Rcpp", "reshape2", "rlang", "rms", "rpart", "rprojroot", "shinyjs", "sp", "tibble", "tidyr", "viridis", "withr", "xml2", "yaml", "zoo"))
install.packages(c("MASS", "mgcv", "rpart"), lib="/Users/alessiocrippa/Dropbox/KI/Thesis/kappa_Rnw/packrat/lib-R")
unlink("packrat/lib-R", recursive = TRUE)
